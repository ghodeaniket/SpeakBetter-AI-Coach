name: Deploy

on:
  push:
    branches: [ main, feature/monorepo-setup ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  prepare:
    name: Prepare Deployment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      
    steps:
    - id: set-env
      name: Set Environment
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
          echo "environment=production" >> $GITHUB_OUTPUT
        else
          echo "environment=staging" >> $GITHUB_OUTPUT
        fi

  deploy-web:
    name: Deploy Web App
    needs: prepare
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare.outputs.environment }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web app
      run: npm run build
    
    - name: Setup Firebase
      uses: w9jds/firebase-action@master
      with:
        args: use ${{ needs.prepare.outputs.environment }}
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Post-deployment notification
      if: success()
      run: |
        echo "Web app successfully deployed to ${{ needs.prepare.outputs.environment }} environment"
        # Here you could add Slack notifications or other integrations

  deploy-functions:
    name: Deploy Cloud Functions
    needs: prepare
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare.outputs.environment }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Firebase
      uses: w9jds/firebase-action@master
      with:
        args: use ${{ needs.prepare.outputs.environment }}
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Deploy to Firebase Functions
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only functions
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
