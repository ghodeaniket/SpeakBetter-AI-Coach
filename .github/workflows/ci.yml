name: CI

on:
  push:
    branches: [ main, develop, feature/monorepo-setup, feature/react-native ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Run linting
      run: npm run lint || echo "Linting issues found during transition phase"
      continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Build packages
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: |
          packages/*/dist
        retention-days: 7

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: .
    
    - name: Make ci-test script executable
      run: chmod +x ./ci-test.sh
    
    - name: Run CI-specific tests
      run: npm run test:ci
  
  report:
    name: Report Status
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    if: always()
    
    steps:
    - name: Report Status
      run: |
        echo "CI Workflow Completed"
        echo "Linting: ${{ needs.lint.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Tests: ${{ needs.test.result }}"
        
        if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.build.result }}" == "success" && "${{ needs.test.result }}" == "success" ]]; then
          echo "All checks passed successfully!"
          exit 0
        else
          echo "Some checks failed or had warnings."
          exit 1
        fi
