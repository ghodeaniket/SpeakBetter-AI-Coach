#!/bin/bash
# prepare-env.sh
# This script can be used in CI/CD pipelines to securely prepare env files
# Usage: ./prepare-env.sh [development|production]

set -e

# Check if the environment type is provided
ENV_TYPE=$1
if [ -z "$ENV_TYPE" ]; then
  echo "Error: Environment type not specified"
  echo "Usage: ./prepare-env.sh [development|production]"
  exit 1
fi

# Validate environment type
if [ "$ENV_TYPE" != "development" ] && [ "$ENV_TYPE" != "production" ]; then
  echo "Error: Invalid environment type. Must be 'development' or 'production'"
  exit 1
fi

ENV_FILE="./apps/mobile-app/.env.$ENV_TYPE"

echo "Creating $ENV_FILE..."

# Create environment file from CI/CD variables
cat > "$ENV_FILE" << EOF_ENV
# SpeakBetter Environment Configuration
# Generated by CI/CD pipeline on $(date)
# Environment: $ENV_TYPE

# Firebase Configuration
FIREBASE_API_KEY=$FIREBASE_API_KEY
FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN
FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID
FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET
FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID
FIREBASE_APP_ID=$FIREBASE_APP_ID

# Google Cloud Configuration
GOOGLE_CLOUD_API_KEY=$GOOGLE_CLOUD_API_KEY

# App Configuration
APP_ENV=$ENV_TYPE
API_URL=$API_URL
EOF_ENV

# Set permissions
chmod 600 "$ENV_FILE"

echo "✅ Created $ENV_FILE successfully"

# Create a symlink to .env
ln -sf "$ENV_FILE" "./apps/mobile-app/.env"
echo "✅ Created symlink to .env"

# Validate required variables
REQUIRED_VARS=("FIREBASE_API_KEY" "FIREBASE_AUTH_DOMAIN" "FIREBASE_PROJECT_ID" 
               "FIREBASE_STORAGE_BUCKET" "FIREBASE_MESSAGING_SENDER_ID" 
               "FIREBASE_APP_ID" "GOOGLE_CLOUD_API_KEY")

MISSING_VARS=()
for VAR in "${REQUIRED_VARS[@]}"; do
  VALUE=$(grep "^$VAR=" "$ENV_FILE" | cut -d '=' -f2)
  if [ -z "$VALUE" ]; then
    MISSING_VARS+=("$VAR")
  fi
done

if [ ${#MISSING_VARS[@]} -ne 0 ]; then
  echo "⚠️ Warning: Missing environment variables: ${MISSING_VARS[*]}"
  echo "The app may not function correctly."
else
  echo "✅ All required environment variables are set"
fi

echo "Environment setup complete for $ENV_TYPE"